#colorize me baby
set -g default-terminal "xterm-256color"

#no more window 0
set -g base-index 1
setw -g pane-base-index 1

#make me responsive
set -s escape-time 1

#set the PREFIX to Ctrl-A
unbind C-b
set -g prefix C-a
bind C-a send-prefix #double Ctrl-A to send Ctrl-A to running prog

#home row navigation ala vi
setw -g mode-keys vi

# open panes and windows in current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

#pop a pane in and out
## unbind Up; bind Up resize-pane -Z; unbind Down; bind Down resize-pane -Z

# navigating
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# smart pane switching with awareness of vim splits
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# https://github.com/christoomey/vim-tmux-navigator
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# status line config
if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
