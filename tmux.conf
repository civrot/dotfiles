#colorize me baby
set -g default-terminal "xterm-256color"

#no more window 0
set -g base-index 1
setw -g pane-base-index 1

#make me responsive
set -s escape-time 1

#set the PREFIX to Ctrl-A
unbind C-b
set -g prefix C-a
bind C-a send-prefix #double Ctrl-A to send Ctrl-A to running prog

#home row navigation ala vi
setw -g mode-keys vi

#pop a pane in and out
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

#copy and pasting ala vi
set-option -g default-command "reattach-to-user-namespace -l bash"

#tmux powerline config
set -g status-fg black
set -g status-bg colour235
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-format '#[fg=red,bold][#[fg=colour45,bold]#I#[fg=colour45]:#[fg=white]#W#[fg=red,bold]]#F'
set -g status on
set -g status-interval 2
set -g status-utf8 on
set -g status-justify "centre"
set -g status-left-length 90
set -g status-right-length 90
set -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"

# smart pane switching with awareness of vim splits
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# https://github.com/christoomey/vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

