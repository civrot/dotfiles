#!/usr/env bash
git_info() {
  # colors
  local RESET="\033[0m"
  local GRAY="\033[0;37m"
  local RED="\033[1;31m"
  local LIGHT_RED="\033[0;31m"
  local GREEN="\033[1;32m"
  local BLUE="\033[1;34m"
  local PINK="\033[1;35m"
  local CYAN="\033[1;36m"
  local PURPLE="\033[0;35m"
  local WHITE="\033[1;37m"
  local BROWN="\033[0;33m"

  local GOOD="\xe2\x88\x99" # ∙ circle
  local AHEAD="\xe2\x86\x91" # ↑ up arrow
  local BEHIND="\xe2\x86\x93" # ↓ down arrow
  local CHANGED="\xcf\x9f" # ϟ lightning
  local DIVERGED="\xe2\x86\x95" # ↕ up-down
  local UNTRACKED="\xe0\xb2\xa0_\xe0\xb2\xa0" # ಠ_ಠ disapproval

  local NEW_LINE="\n"

  git_place() {
    local place=$(git status 2> /dev/null | head -n2 | tail -n1)
    if [[ $( echo $place | grep "Your branch is ahead of" ) != "" ]]; then
echo -e "$PINK$AHEAD"
    elif [[ $( echo $place | grep "Your branch is behind" ) != "" ]]; then
echo -e "$BLUE$BEHIND"
    elif [[ $( echo $place | grep "Your branch and .* have diverged" ) != "" ]]; then
echo -e "$CYAN$DIVERGED"
    else
echo -e "$GREEN$GOOD"
    fi
  }

  git_status() {
    local status=$(git status 2> /dev/null | tail -n1)
    if [[ $status != "nothing to commit, working directory clean" ]]; then
      if [[ $status == 'nothing added to commit but untracked files present (use "git add" to track)' ]]; then
        echo -e "$GRAY$UNTRACKED"
      else
        echo -e "$RED$CHANGED"
      fi
    fi
  }

  local branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1/")

  if [[ $branch != "" ]]; then
    echo -e "$BROWN($branch$(git_place)$(git_status)$BROWN)\n$RESET"
    # echo -e "\n\n $BROWN($branch$(git_place)$(git_status)$BROWN)$RESET"
  fi
}
